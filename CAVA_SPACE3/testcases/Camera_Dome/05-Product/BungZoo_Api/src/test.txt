*** Settings ***
Library           RequestsLibrary
Library           Collections
Library           String
Library           MyLib.BaseLib

*** Variables ***
${host}           139.198.176.69    # 服务器ip
${port}           4002    # 服务端口
${username}       test    # 用户名
${password}       test1234    # 密码

*** Test Cases ***
登录失败_密码错误
    [Setup]    connect_server
    #设置错误密码
    ${password}    Set Variable    test12345
    #创建会话header
    ${headers_dict}    Create Dictionary    Content-Type=application/json
    ${random}    gen_random
    ${timestamp}    Get Time    epoch
    ${timestamp}    Evaluate    "%d" %${timestamp}
    ${nonce}    Gen Nonce    ${username}    ${password}    ${random}    ${timestamp}    bungzoo
    ${data}    Create Dictionary    username=${username}    nonce=${nonce}    random=${random}    timestamp=${timestamp}
    Log Many    ${data}
    #发送请求
    ${resp}    Post Request    api    /user/auth    data=${data}    headers=${headers_dict}
    Log    resp_content=${resp.content}
    Log    status=${resp.status_code}
    ${ret_json}    Evaluate    str(${resp.content})
    ${ret_list}    Run Keyword And Ignore Error    Evaluate    ${ret_json}['error']['message']
    ${ret_tmp}    Evaluate    ${ret_list}[1]
    ${ok}    Evaluate    ${ret_list}[0]
    ${ret}    Set Variable If    '${ok}' == \ 'PASS'    ${ret_tmp}    ''
    Run Keyword If    '${ret}' == 'error'    Log    测试通过
    ...    ELSE    Fail    测试失败
    [Teardown]    disconnect

登录成功
    [Setup]    connect_server
    #创建会话header
    ${headers_dict}    Create Dictionary    Content-Type=application/json
    ${random}    gen_random
    ${timestamp}    Get Time    epoch
    ${timestamp}    Evaluate    "%d" %${timestamp}
    ${nonce}    Gen Nonce    ${username}    ${password}    ${random}    ${timestamp}    bungzoo
    ${data}    Create Dictionary    username=${username}    nonce=${nonce}    random=${random}    timestamp=${timestamp}
    Log Many    ${data}
    #发送请求
    ${resp}    Post Request    api    /user/auth    data=${data}    headers=${headers_dict}
    Log    resp_content=${resp.content}
    Log    status=${resp.status_code}
    ${ret_json}    Evaluate    str(${resp.content})
    ${ret_list}    Run Keyword And Ignore Error    Evaluate    ${ret_json}['data']
    ${ret_tmp}    Evaluate    ${ret_list}[1]
    ${ok}    Evaluate    ${ret_list}[0]
    ${ret}    Set Variable If    '${ok}' == \ 'PASS'    ${ret_tmp}    ''
    Run Keyword If    '${ret}' == 'pass'    Log    测试通过
    ...    ELSE    Fail    测试失败
    [Teardown]    disconnect

登录失败_锁定
    [Setup]    connect_server
    #设置错误密码
    ${password}    Set Variable    test12345
    #创建会话header
    ${headers_dict}    Create Dictionary    Content-Type=application/json
    ${count}    Set Variable    8
    : FOR    ${i}    IN RANGE    1    ${count}
    \    ${random}    gen_random
    \    ${timestamp}    Get Time    epoch
    \    ${timestamp}    Evaluate    "%d" %${timestamp}
    \    ${nonce}    Gen Nonce    ${username}    ${password}    ${random}    ${timestamp}
    \    ...    bungzoo
    \    ${data}    Create Dictionary    username=${username}    nonce=${nonce}    random=${random}    timestamp=${timestamp}
    \    Log Many    ${data}
    \    #发送请求
    \    ${resp}    Post Request    api    /user/auth    data=${data}    headers=${headers_dict}
    \    Log    resp_content=${resp.content}
    \    Log    status=${resp.status_code}
    \    ${ret_json}    Evaluate    str(${resp.content})
    \    ${ret_list}    Run Keyword And Ignore Error    Evaluate    ${ret_json}['error']['message']
    \    ${ret_tmp}    Evaluate    ${ret_list}[1]
    \    ${ok}    Evaluate    ${ret_list}[0]
    \    ${ret}    Set Variable If    '${ok}' == \ 'PASS'    ${ret_tmp}    unknown
    \    ${ret_list1}    Split String    ${ret}    ,
    \    ${ret_info}    Get From List    ${ret_list1}    0
    \    Run Keyword If    '${ret_info}' == 'locked'    Pass Execution    测试通过
    \    Run Keyword If    ${i} == ${7} and '${ret_info}' != 'locked'    Fail    测试失败
    [Teardown]    disconnect

注册_获取公钥证书
    [Setup]    connect_server
    #创建会话header
    ${headers_dict}    Create Dictionary    Content-Type=application/json
    ${data}    Create Dictionary    option=queryPubkey    algorithm=RSA
    Log Many    ${data}
    #发送请求
    ${resp}    Post Request    api    /user/register    data=${data}    headers=${headers_dict}
    Log    resp_content=${resp.content}
    Log    status=${resp.status_code}
    ${ret_json}    Evaluate    str(${resp.content})
    Log    ${ret_json}
    ${ret_list}    Run Keyword And Ignore Error    Evaluate    ${ret_json}['data']
    ${ret_tmp}    Evaluate    ${ret_list}[1]
    ${ok}    Evaluate    ${ret_list}[0]
    ${ret}    Set Variable If    '${ok}' == \ 'PASS'    ${ret_tmp}    ''    #Run Keyword If    '${ret}' == 'pass'
    ...    # Log    测试通过    # ELSE    Fail    测试失败
    Should Contain    ${ret}    BEGIN PUBLIC KEY    msg=测试失败
    [Teardown]    disconnect

注册_注册成功
    [Setup]    connect_server
    #创建会话header
    ${headers_dict}    Create Dictionary    Content-Type=application/json
    ${data}    Create Dictionary    option=queryPubkey    algorithm=RSA
    Log Many    ${data}
    #发送请求
    ${resp}    Post Request    api    /user/register    data=${data}    headers=${headers_dict}
    Log    resp_content=${resp.content}
    Log    status=${resp.status_code}
    ${ret_json}    Evaluate    str(${resp.content})
    Log    ${ret_json}
    ${ret_list}    Run Keyword And Ignore Error    Evaluate    ${ret_json}['data']
    ${ret_tmp}    Evaluate    ${ret_list}[1]
    ${ok}    Evaluate    ${ret_list}[0]
    ${ret}    Set Variable If    '${ok}' == \ 'PASS'    ${ret_tmp}    ''    #Run Keyword If    '${ret}' == 'pass'
    ...    # Log    测试通过    # ELSE    Fail    测试失败
    Should Contain    ${ret}    BEGIN PUBLIC KEY    msg=测试失败
    ${encrypt_pwd}    Rsa Encpypt    ${password}    ${ret}
    ${username}    Gen Random
    ${data}    Create Dictionary    option=register    algorithm=RSA    username=${username}     password=${encrypt_pwd}    phone=18868871622
    ...    code=185622    level=renter
    Log Many    ${data}
    #发送请求
    ${resp}    Post Request    api    /user/register    data=${data}    headers=${headers_dict}
    Log    resp_content=${resp.content}
    Log    status=${resp.status_code}
    ${ret_json}    Evaluate    str(${resp.content})
    Log    ${ret_json}
    ${ret_list}    Run Keyword And Ignore Error    Evaluate    ${ret_json}['data']
    ${ret_tmp}    Evaluate    ${ret_list}[1]
    ${ok}    Evaluate    ${ret_list}[0]
    ${ret}    Set Variable If    '${ok}' == \ 'PASS'    ${ret_tmp}    ''    #Run Keyword If    '${ret}' == 'pass'
    ...    # Log    测试通过    # ELSE    Fail    测试失败
    Run Keyword If    '${ret}' == 'succeed'    Log    测试通过
    ...    ELSE    Fail    测试失败
    [Teardown]    disconnect

上传房源_成功
    [Setup]    connect_server
    #创建会话header
    ${wsse_time}    gen_wsse_time
    ${random}    Gen Random
    ${nonce}    Gen Nonce    ${username}    ${password}    ${random}    ${wsse_time}    bungzoo
    ${wsse_info}    Set Variable    UsernameToken Username=\"${username}\", PasswordDigest=\"${nonce}\", Nonce=\"${random}\", Created=\"${wsse_time}\"
    ${headers_dict}    Create Dictionary    Content-Type=application/json    X-WSSE=${wsse_info}
    ${publish_time}    Get Pc Nowtime
    ${detail}    Gen Random
    ${houseInfo_ele}    Create Dictionary    publishTime=${publish_time}    title=测试房源    price=5000元/月    size=三室一厅    detail=${detail}
    ...    location=杭州滨江区长江小区    updatedAt=${publish_time}
    ${houseInfo_list}     Create List    ${houseInfo_ele}
    ${data}    Create Dictionary    houseInfo=${houseInfo_list}
    Log Many    ${data}
    #发送请求
    ${resp}    Post Request    api    /house/update    data=${data}    headers=${headers_dict}
    Log    resp_content=${resp.content}
    Log    status=${resp.status_code}
    ${ret_json}    Evaluate    str(${resp.content})
    Log    ${ret_json}
    ${ret_list}    Run Keyword And Ignore Error    Evaluate    ${ret_json}['data']
    ${ret_tmp}    Evaluate    ${ret_list}[1]
    ${ok}    Evaluate    ${ret_list}[0]
    ${ret}    Set Variable If    '${ok}' == \ 'PASS'    ${ret_tmp}    ''    #Run Keyword If    '${ret}' == 'pass'
    ...    # Log    测试通过    # ELSE    Fail    测试失败
    Run Keyword If    '${ret}' == 'ok'    Log    测试通过
    ...    ELSE    Fail    测试失败
    [Teardown]    disconnect

*** Keywords ***
connect_server
    #创建digest会话
    Create Session    alias=api    url=http://${host}:${port}

disconnect
    Delete All Sessions
